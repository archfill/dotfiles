# separators
separator_left="\ue0b4"
separator_right="\ue0b6"

subseparator_left="\ue0b5"
subseparator_right="\ue0b7"

# prefixキーをC-aに変更する
set -g prefix C-a

# C-bのキーバインドを解除する
unbind C-b

# キーストロークのディレイを減らす
set -sg escape-time 1

# ウィンドウのインデックスを1から始める
set -g base-index 1

# ペインのインデックスを1から始める
setw -g pane-base-index 1

# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# C-a*2でtmux内のプログラムにC-aを送る
bind C-a send-prefix

# 新しいペイン表示時にディレクトリ引き継ぎ
bind c new-window -c "#{pane_current_path}"

# | でペインを縦に分割する
bind | split-window -hc "#{pane_current_path}"

# - でペインを横に分割する
bind - split-window -vc "#{pane_current_path}"

# Vimのキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# マウス操作を有効にする
setw -g mouse on

# 256色端末を使用する
set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

# ステータスバーの色を設定する
set -g status-fg white
set -g status-bg black

# ウィンドウリストの色を設定する
## window-status-style
# アクティブなウィンドウを目立たせる
## window-status-current-style
# ペインボーダーの色を設定する
## pane-border-style
# アクティブなペインを目立たせる
## pane-active-border-style
# コマンドラインの色を設定する
## message-style
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"
# 緊急対応 next-3.0
if-shell -b '[! $(echo "$TMUX_VERSION") = "next-3.0"] && [ "$(echo "$TMUX_VERSION < 1.9" | bc)" -eq 1 ]' \
  "setw -g window-status-fg cyan; \
   setw -g window-status-bg default; \
   setw -g window-status-attr dim; \
   setw -g window-status-current-fg white; \
   setw -g window-status-current-bg red; \
   setw -g window-status-current-attr bright; \
   set -g pane-border-fg #778899; \
   set -g pane-border-bg black; \
   set -g pane-active-border-fg black; \
   set -g pane-active-border-bg #778899; \
   set -g message-fg white; \
   set -g message-bg black; \
   set -g message-attr bright" \
  "setw -g window-status-style fg=cyan,bg=default,dim; \
   setw -g window-status-current-style fg=white,bg=red,bright; \
   set -g pane-border-style fg=#778899,bg=black; \
   set -g pane-active-border-style fg=black,bg=#778899; \
   set -g message-style fg=white,bg=black,bright"

# ステータスバーを設定する
set-option -g status on
set-option -g status-left-length 100
set-option -g status-right-length 120
## リフレッシュの間隔を設定する(デフォルト 15秒)
set-option -g status-interval 1
## ウィンドウリストの位置を中心寄せにする
set-option -g status-justify centre
## ヴィジュアルノーティフィケーションを有効にする
setw -g monitor-activity on
set-option -g visual-activity on
## ステータスバーを上部に表示する
set-option -g status-position top

set-option -g status-left "#(~/git/tmux-powerline/powerline.sh left)"
set-option -g status-right "#{iptmthd}#(~/git/tmux-powerline/powerline.sh right)"
#set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]#[fg=colour255, bg=colour27] #I : #W #[fg=colour27, bg=colour235]"
setw -g window-status-current-format "#[fg=#2e3244,bg=#1e2132,nobold,nounderscore,noitalics]$separator_right#[fg=#c6c8d1,bg=#2e3244] #I $subseparator_right #W $subseparator_left #F #[fg=#2e3244,bg=#1e2132,nobold,nounderscore,noitalics]$separator_left"

set-option -g pane-border-status bottom
set-option -g pane-border-format "#[fg=black,bg=blue] #P #(~/.tmux/bin/tmux-pane-border '#{pane_current_path}')"

# コピーモードを設定する
## viのキーバインドを使用する
setw -g mode-keys vi
## コピーモードの操作をvi風に設定する
bind-key -T copy-mode-vi v send-keys -X begin-selection
# for mac
if-shell "uname | grep -q Darwin" \
  'bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"'
if-shell "uname | grep -q Darwin" \
  'unbind -T copy-mode-vi Enter'
if-shell "uname | grep -q Darwin" \
  'bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"'

# tmuxのbufferとxのclipboardを連携させる
if-shell 'type xsel' \
  "bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xsel -ib'"
if-shell 'type xsel' \
  "bind-key -T copy-mode-vi Y send-keys -X copy-pipe 'xsel -ib'"
if-shell 'type xsel' \
  "bind ] run-shell \
    'xsel -ob | xargs -0 -I{} tmux set-buffer -- {} && tmux paste-buffer'"

if-shell 'type xclip' \
  'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"'
if-shell 'type xclip' \
  'bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"'

set-option -g default-command \
'which reattach-to-user-namespace > /dev/null 2>&1 && \
reattach-to-user-namespace -l $SHELL || $SHELL'

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# バーにinputmethod情報を表示させるもの only mac
set -g @plugin 'ki-chi/tmux-inputmethod'
# set -g @plugin 'seebi/tmux-colors-solarized'
# set -g @plugin 'odedlaz/tmux-onedark-theme'

# set -g @colors-solarized 'dark'

# シンクロの開始・終了をトグルで行う
# bind c set-window-option synchronize-panes

# シンクロの開始と終了を別のキーに登録する
bind v set-window-option synchronize-panes on
bind b set-window-option synchronize-panes off

#===================================
# Auto start tmux and restore only mac
#===================================

# auto start terminal
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'iterm'

# auto restore tmux
set -g @continuum-restore 'on'


run-shell '~/.tmux/plugins/tpm/tpm'
